{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\nextProject\\\\pages\\\\users\\\\[id].js\";\nimport React from \"react\";\nimport fetch from \"isomorphic-fetch\";\nimport Container from \"../../components/Container\"; // import { useRouter } from \"next/router\";\n\nexport default function Profile({\n  user\n}) {\n  if (user === undefined) return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: \"No es posible encotrar este usuario\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [user.first_name, \" \", user.last_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"address\", {\n        children: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\nProfile.getInitialProps = async ctx => {\n  const res = null;\n  const json = null;\n\n  const functionsad = async () => {\n    res = await fetch(`https://reqres.in/api/users/${ctx.query.id}`);\n    json = await res.json();\n  };\n\n  setTimeout(async () => {\n    await functionsad();\n  }, 3000);\n  if (!json) return null;\n  return {\n    user: json.data\n  };\n};","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/nextProject/pages/users/[id].js"],"names":["React","fetch","Container","Profile","user","undefined","avatar","first_name","last_name","email","getInitialProps","ctx","res","json","functionsad","query","id","setTimeout","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB,C,CAEA;;AAEA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA2B;AACxC,MAAIA,IAAI,KAAKC,SAAb,EACE,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEF,sBACE,QAAC,SAAD;AAAA,2BACE;AAAA,8BACE;AAAK,QAAA,GAAG,EAAED,IAAI,CAACE;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBACGF,IAAI,CAACG,UADR,OACqBH,IAAI,CAACI,SAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAA,kBAAUJ,IAAI,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;AAEDN,OAAO,CAACO,eAAR,GAA0B,MAAOC,GAAP,IAAe;AACvC,QAAMC,GAAG,GAAG,IAAZ;AACA,QAAMC,IAAI,GAAG,IAAb;;AACA,QAAMC,WAAW,GAAG,YAAY;AAC9BF,IAAAA,GAAG,GAAG,MAAMX,KAAK,CAAE,+BAA8BU,GAAG,CAACI,KAAJ,CAAUC,EAAG,EAA7C,CAAjB;AACAH,IAAAA,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAb;AACD,GAHD;;AAIAI,EAAAA,UAAU,CAAC,YAAY;AACrB,UAAMH,WAAW,EAAjB;AACD,GAFS,EAEP,IAFO,CAAV;AAGA,MAAI,CAACD,IAAL,EAAW,OAAO,IAAP;AACX,SAAO;AAAET,IAAAA,IAAI,EAAES,IAAI,CAACK;AAAb,GAAP;AACD,CAZD","sourcesContent":["import React from \"react\";\r\nimport fetch from \"isomorphic-fetch\";\r\nimport Container from \"../../components/Container\";\r\n\r\n// import { useRouter } from \"next/router\";\r\n\r\nexport default function Profile({ user }) {\r\n  if (user === undefined)\r\n    return <fieldset>No es posible encotrar este usuario</fieldset>;\r\n\r\n  return (\r\n    <Container>\r\n      <fieldset>\r\n        <img src={user.avatar} />\r\n        <p>\r\n          {user.first_name} {user.last_name}\r\n        </p>\r\n        <address>{user.email}</address>\r\n      </fieldset>\r\n    </Container>\r\n  );\r\n}\r\n\r\nProfile.getInitialProps = async (ctx) => {\r\n  const res = null;\r\n  const json = null;\r\n  const functionsad = async () => {\r\n    res = await fetch(`https://reqres.in/api/users/${ctx.query.id}`);\r\n    json = await res.json();\r\n  };\r\n  setTimeout(async () => {\r\n    await functionsad();\r\n  }, 3000);\r\n  if (!json) return null;\r\n  return { user: json.data };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}